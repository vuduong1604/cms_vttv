{"version":3,"sources":["file:///D:/Project_CMS/NewProject/assets/Script/Game1-4.ts"],"names":["_decorator","Component","Node","Label","assetManager","SpriteFrame","Texture2D","find","Sprite","ccclass","property","Game1_4","nodeupload","start","uploadimg","UploadFile","node","cc","sys","isBrowser","ipFile","document","createElement","type","accept","console","log","click","addEventListener","img","canvas","reader","FileReader","onload","progressEvent","src","target","result","ctx","getContext","drawImage","MAX_WIDTH","MAX_HEIGHT","width","height","dataUrl","toDataURL","replace","fetch","then","res","arrayBuffer","buffer","files","readAsDataURL","myHeaders","Headers","append","formdata","FormData","name","requestOptions","method","headers","body","redirect","response","text","classItem","JSON","parse","url","setImage","catch","error","OpenpopupUpload","popupupload","active","ClosepopupUpload","remoteUrl","typefile","substr","length","loadRemote","err","imageAsset","spr","spriteFrame","tex","image","texture","getComponent","textlabel","string","enableSoundSprite"],"mappings":"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","sourcesContent":["import {\n    _decorator,\n    Component,\n    Node,\n    Prefab,\n    instantiate,\n    Label,\n    assetManager,\n    SpriteFrame,\n    Texture2D,\n    find,\n    Sprite,\n} from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass('Game1_4')\nexport class Game1_4 extends Component {\n    @property(Node)\n    popupupload: Node = null;\n\n    @property(SpriteFrame)\n    disableSoundSprite: SpriteFrame = null;\n\n    @property(SpriteFrame)\n    enableSoundSprite: SpriteFrame = null;\n\n    start() {\n\n    }\n\n    nodeupload = null; // node click upload\n    uploadimg() {\n        this.UploadFile(this.nodeupload);\n    }\n\n    //call từ bên item\n    UploadFile(node) {\n        if (cc.sys.isBrowser) {\n            let ipFile = document.createElement(\"input\");\n            ipFile.type = \"file\";\n            ipFile.accept = \"image/png/mp3\";\n            console.log(\"ipFile\", ipFile);\n            ipFile.click();\n            ipFile.addEventListener(\n                \"change\",\n                () => {\n                    var img = document.createElement(\"img\");\n                    var canvas = document.createElement(\"canvas\");\n                    var reader = new FileReader();\n                    reader.onload = function (progressEvent) {\n                        img.src = progressEvent.target.result;\n                        img.onload = function () {\n                            // access image size here\n                            var ctx = canvas.getContext(\"2d\");\n                            ctx.drawImage(img, 0, 0);\n\n                            var MAX_WIDTH = 800;\n                            var MAX_HEIGHT = 600;\n                            var width = img.width;\n                            var height = img.height;\n\n                            if (width > height) {\n                                if (width > MAX_WIDTH) {\n                                    height *= MAX_WIDTH / width;\n                                    width = MAX_WIDTH;\n                                }\n                            } else {\n                                if (height > MAX_HEIGHT) {\n                                    width *= MAX_HEIGHT / height;\n                                    height = MAX_HEIGHT;\n                                }\n                            }\n                            canvas.width = width;\n                            canvas.height = height;\n                            var ctx = canvas.getContext(\"2d\");\n                            ctx.drawImage(img, 0, 0, width, height);\n                            var dataUrl = canvas.toDataURL(\"image/png\");\n                            console.log(\"buffer\", dataUrl);\n                            dataUrl =\n                                \"data:application/octet-binary;base64,\" +\n                                dataUrl.replace(\"data:image/png;base64,\", \"\");\n                            fetch(dataUrl)\n                                .then((res) => res.arrayBuffer())\n                                .then((buffer) => {\n                                    console.log(\"buffer\", buffer);\n                                });\n                        };\n                    };\n                    console.log(\"ipFile.files[0]\", ipFile.files);\n                    reader.readAsDataURL(ipFile.files[0]);\n                    // call Api\n\n                    var myHeaders = new Headers();\n                    myHeaders.append(\n                        \"Cookie\",\n                        \".AspNetCore.Session=CfDJ8GmrYVI6VxlFp5hvVMclUtanrpD%2BHH0oRRUDw6oaMn3NwyayHlyo3pNzp%2BEoa5sTRFRu%2Fiycjkfhs3cCAhcMz%2FI7uzsM8IQhc14aMSSnuv8PAShbhhpB538WNIJQxIwHCpD%2BNRNl1pW04TW%2FgN9%2BD%2BQcZFNbTHkI7U%2BOu4E7BK59\"\n                    );\n\n                    var formdata = new FormData();\n                    formdata.append(\"Item\", ipFile.files[0], ipFile.files[0].name);\n                    formdata.append(\"ClassItem\", node.name);\n\n                    var requestOptions = {\n                        method: \"POST\",\n                        headers: myHeaders,\n                        body: formdata,\n                        redirect: \"follow\",\n                    };\n\n                    fetch(\n                        \"https://dev-cms-teacher.consangtao.vn/Api/UploadFile\",\n                        requestOptions\n                    )\n                        .then((response) => response.text())\n                        .then((result) => {\n                            console.log(result);\n                            let classItem = JSON.parse(result).classItem;\n                            let url = JSON.parse(result).url;\n\n                            this.setImage(url, node);\n                        })\n                        .catch((error) => console.log(\"error\", error));\n                },\n                false\n            );\n        }\n    }\n\n    public OpenpopupUpload(node) {\n        this.popupupload.active = true;\n        // this.popupupload.setSiblingIndex(100000);\n        // this.nodeupload = node;\n        // console.log(\"nodeupload =>\", this.nodeupload);\n        // if (this.nodeupload.name != \"question\") {\n        //   this.button_tpnl.active = false;\n        // }\n        // if (this.nodeupload.name == \"question\") {\n        //   if (\n        //     this.nodeupload.parent.getChildByName(\"iditem\").getComponent(Label)\n        //       .string != \"00000000-0000-0000-0000-000000000000\"\n        //   ) {\n        //     this.button_tpnl.active = true;\n        //   } else {\n        //     this.button_tpnl.active = false;\n        //   }\n    }\n\n    public ClosepopupUpload() {\n        this.popupupload.active = false;\n    }\n\n    setImage(remoteUrl, node) {\n        this.ClosepopupUpload();\n        var typefile = remoteUrl.substr(remoteUrl.length - 3); \n        // console.warn(\"typefile=>\", typefile);\n        if (typefile == \"png\" || typefile == \"jpg\") {\n            assetManager.loadRemote(remoteUrl, (err, imageAsset) => {\n                var spr = find(\"Ques\", node);\n                console.log(spr);\n\n                const spriteFrame = new SpriteFrame();\n                const tex = new Texture2D();\n                tex.image = imageAsset;\n                spriteFrame.texture = tex;\n                spr.getComponent(Sprite).spriteFrame = spriteFrame;\n            });\n\n            var textlabel = find(\"Mask/Sprite/Label_sprite\", node);\n            // textlabel.getComponent(Label).string = remoteUrl;\n        }\n        if (typefile == \"mp3\") {\n            var textlabel = find(\"sound/Label_sound\", node);\n            textlabel.getComponent(Label).string = remoteUrl;\n            find(\"sound\", node).getComponent(Sprite).spriteFrame =\n                this.enableSoundSprite;\n        }\n    }\n}\n\n"]}